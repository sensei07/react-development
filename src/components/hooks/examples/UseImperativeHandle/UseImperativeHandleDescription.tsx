import styles from './UseImperativeHandleDescription.module.scss';

const PLUSES = [
    'Контрольований інтерфейс: useImperativeHandle надає можливість контролювати те, що експортується з компонента через ref, тобто лише ті методи та властивості, які ви хочете надати зовнішньому коду. Це може зробити інтерфейс більш контрольованим та зручним для використання.',
    'Використання зовнішнього коду: useImperativeHandle може бути корисним для експортування методів та властивостей компонента, які можуть бути використані зовнішнім кодом. Це дає можливість більш гнучко контролювати функціональність компонента та використовувати його методи та властивості для різних сценаріїв використання.',
    'Доступ до внутрішнього стану: useImperativeHandle дозволяє отримувати доступ до внутрішнього стану компонента, що може бути корисним для деяких сценаріїв використання.'
];

const MINUSES = [
    'Незручно використовувати: використання useImperativeHandle може стати складним, особливо якщо ви не знаєте, які методи та властивості компонента експортуються через ref. Це може призвести до проблем з розумінням функціональності компонента та зайвого коду.',
    'Може бути необхідний useEffect: інколи може бути необхідно використовувати useEffect для ініціалізації певних значень, які потрібні для useImperativeHandle. Це може призвести до зайвого коду та складнішого коду.',
    'Небезпека зловживання: можливість використовувати методи та властивості компонента з зовнішнього коду може призвести до зловживання та порушення приватності даних компонента. Крім того, використання useImperativeHandle може призвести до складнішого розуміння та обслуговування коду, особливо якщо експортуються складні методи або властивості компонента. Тому, якщо ви необхідно експортувати методи або властивості компонента через ref, важливо забезпечити відповідну документацію та вказати, як вони повинні бути використані для уникнення можливих проблем.'
];


export const UseImperativeHandleDescription = () => {
    return (
        <div className={styles.container}>
            <h2>PLUSES</h2>
            <ul className={styles.details_list}>
                {PLUSES.map((plus, index) => (
                    <li key={index}>{plus}</li>
                ))}
            </ul>
            <h2 className={styles.title_minus}>MINUSES</h2>
            <ul className={styles.details_list}>
                {MINUSES.map((minus, index) => (
                    <li className={styles.minus} key={index}>{minus}</li>
                ))}
            </ul>
        </div>
    );
};
