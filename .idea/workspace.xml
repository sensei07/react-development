<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="fa563a81-ae97-43db-bb1e-e4d28c7e7ace" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/react-development.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/README.old.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/favicon.ico" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/index.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/logo192.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/logo512.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/manifest.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/robots.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/TDD/TagsInput/TagsInput.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/TDD/TagsInput/TagsInput.test.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/TDD/TagsInput/TagsInput.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/TDD/index.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/index.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/react-app-env.d.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/setupTests.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/yarn.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.eslintrc.cjs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/index.html" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/public/vite.svg" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/App.css" beforeDir="false" afterPath="$PROJECT_DIR$/src/App.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/App.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/App.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/assets/react.svg" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/index.css" beforeDir="false" afterPath="$PROJECT_DIR$/src/index.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vite-env.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tsconfig.json" beforeDir="false" afterPath="$PROJECT_DIR$/tsconfig.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tsconfig.node.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vite.config.ts" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2Oxm9gzBqwRZAt6Ixs1VjOcAa8J" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "last_opened_file_path": "C:/Users/atomk/Desktop/Education/react-development",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs.jest.jest_package": "C:/Users/atomk/Desktop/Education/react-development/node_modules/react-scripts",
    "nodejs_package_manager_path": "npm",
    "ts.external.directory.path": "C:\\Users\\atomk\\Desktop\\Education\\react-development\\node_modules\\typescript\\lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\atomk\Desktop\Education\react-development\src\components\TDD" />
      <recent name="C:\Users\atomk\Desktop\Education\react-development\src\components\UI\TagsInput" />
    </key>
  </component>
  <component name="RunManager" selected="Jest.TagsInput (2)">
    <configuration name="TagsInput (1)" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/src/components/UI/TagsInput/TagsInput.test.tsx" />
      <test-names>
        <test-name value="TagsInput" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="TagsInput (2)" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/src/components/TDD/TagsInput/TagsInput.test.tsx" />
      <test-names>
        <test-name value="TagsInput" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="TagsInput.should add tag when typing comma" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/components/UI/TagsInput.test.tsx" />
      <test-names>
        <test-name value="TagsInput" />
        <test-name value="should add tag when typing comma" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="TagsInput.should be able to add tag when pressing enter" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/components/UI/TagsInput.test.tsx" />
      <test-names>
        <test-name value="TagsInput" />
        <test-name value="should be able to add tag when pressing enter" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="test" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="test" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.TagsInput (2)" />
        <item itemvalue="npm.test" />
        <item itemvalue="Jest.TagsInput (1)" />
        <item itemvalue="Jest.TagsInput.should add tag when typing comma" />
        <item itemvalue="Jest.TagsInput.should be able to add tag when pressing enter" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="fa563a81-ae97-43db-bb1e-e4d28c7e7ace" name="Changes" comment="" />
      <created>1682510466693</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1682510466693</updated>
      <workItem from="1682510467905" duration="551000" />
      <workItem from="1682511033161" duration="2892000" />
      <workItem from="1682514409188" duration="7142000" />
      <workItem from="1682522971622" duration="68000" />
      <workItem from="1682523047351" duration="12237000" />
      <workItem from="1682535627316" duration="3374000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>